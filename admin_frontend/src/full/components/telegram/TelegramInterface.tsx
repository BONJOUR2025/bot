import React, { useState } from 'react';
import { Card, CardContent, CardHeader } from '../ui/card';
import { Button } from '../ui/button';
import { Badge } from '../ui/badge';
import { StatusBadge } from '../design-system/StatusBadge';
import { ActionCard } from '../design-system/ActionCard';
import { 
  DollarSign, 
  Clock, 
  Users, 
  BarChart3, 
  ArrowLeft,
  Plus,
  CheckCircle,
  AlertCircle
} from 'lucide-react';

interface TelegramScreen {
  id: string;
  title: string;
  component: React.ComponentType<{ onNavigate: (screenId: string) => void }>;
}

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é Telegram
const MainMenuScreen: React.FC<{ onNavigate: (screenId: string) => void }> = ({ onNavigate }) => {
  const menuItems = [
    {
      title: 'üí∞ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–ª–∞—Ç—ã',
      description: '–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∞–≤–∞–Ω—Å –∏–ª–∏ –∑–∞—Ä–ø–ª–∞—Ç—É',
      onClick: () => onNavigate('payment-request'),
      icon: 'üí∞'
    },
    {
      title: 'üìä –ú–æ–∏ –ø—Ä–æ–¥–∞–∂–∏',
      description: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –∏ —Ä–µ–π—Ç–∏–Ω–≥',
      onClick: () => onNavigate('my-sales'),
      icon: 'üìä'
    },
    {
      title: 'üèñÔ∏è –û—Ç–ø—É—Å–∫',
      description: '–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ—Ç–ø—É—Å–∫ –∏–ª–∏ –±–æ–ª—å–Ω–∏—á–Ω—ã–π',
      onClick: () => onNavigate('vacation-request'),
      icon: 'üèñÔ∏è'
    },
    {
      title: 'üì¶ –ú–æ–µ –∏–º—É—â–µ—Å—Ç–≤–æ',
      description: '–í—ã–¥–∞–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ —Ñ–æ—Ä–º–∞',
      onClick: () => onNavigate('my-property'),
      icon: 'üì¶'
    },
    {
      title: 'üéÇ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è',
      description: '–ë–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–ª–ª–µ–≥',
      onClick: () => onNavigate('birthdays'),
      icon: 'üéÇ'
    },
    {
      title: 'üíº –ú–æ—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
      description: '–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã',
      onClick: () => onNavigate('profile'),
      icon: 'üíº'
    }
  ];

  return (
    <div className="space-y-3">
      <div className="bg-primary text-primary-foreground p-4 rounded-lg">
        <h2 className="font-semibold">üëã –ü—Ä–∏–≤–µ—Ç, –ê–ª–µ–∫—Å–µ–π!</h2>
        <p className="text-sm opacity-90 mt-1">
          –ü—Ä–æ–¥–∞–∂–∏ —Å–µ–≥–æ–¥–Ω—è: <strong>24,850 ‚ÇΩ</strong> ‚Ä¢ –†–µ–π—Ç–∏–Ω–≥: <strong>#3</strong>
        </p>
        <div className="flex gap-4 mt-2 text-xs">
          <span>üèÜ –ß–µ–∫–æ–≤: 18</span>
          <span>üí∞ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: 1,380 ‚ÇΩ</span>
        </div>
      </div>

      <div className="space-y-2">
        {menuItems.map((item, index) => (
          <ActionCard
            key={index}
            title={item.title}
            description={item.description}
            variant="compact"
            actions={[
              {
                label: '–û—Ç–∫—Ä—ã—Ç—å',
                onClick: item.onClick,
                variant: 'default'
              }
            ]}
          />
        ))}
      </div>

      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="space-y-3">
        <div className="bg-warning/10 border border-warning/20 p-3 rounded-lg">
          <div className="flex items-center gap-2">
            <AlertCircle className="h-4 w-4 text-warning" />
            <span className="text-sm font-medium">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
          </div>
          <p className="text-sm text-text-secondary mt-1">
            ‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ –∞–≤–∞–Ω—Å –æ–¥–æ–±—Ä–µ–Ω–∞: 15,000 ‚ÇΩ
          </p>
        </div>
        
        <div className="bg-muted p-4 rounded-lg">
          <h3 className="font-medium mb-3">‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
          <div className="grid grid-cols-2 gap-2">
            <Button size="sm" variant="secondary">
              üìä –°–≤–æ–¥–∫–∞ –¥–Ω—è
            </Button>
            <Button size="sm" variant="secondary">
              üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞
            </Button>
            <Button size="sm" variant="secondary">
              üìã –ú–æ–π –≥—Ä–∞—Ñ–∏–∫
            </Button>
            <Button size="sm" variant="secondary">
              üéØ –ü–ª–∞–Ω –ø—Ä–æ–¥–∞–∂
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
};

// –≠–∫—Ä–∞–Ω –∑–∞–ø—Ä–æ—Å–∞ –≤—ã–ø–ª–∞—Ç—ã
const PaymentRequestScreen: React.FC<{ onNavigate: (screenId: string) => void }> = ({ onNavigate }) => {
  const [paymentType, setPaymentType] = useState('advance');
  const [amount, setAmount] = useState('');
  const [reason, setReason] = useState('');
  const [submitted, setSubmitted] = useState(false);

  const handleSubmit = () => {
    setSubmitted(true);
    setTimeout(() => {
      onNavigate('main');
    }, 2000);
  };

  if (submitted) {
    return (
      <div className="space-y-4">
        <div className="text-center py-8">
          <CheckCircle className="h-16 w-16 text-success mx-auto mb-4" />
          <h2 className="font-semibold text-lg">–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</h2>
          <p className="text-text-secondary mt-2">
            –ó–∞—è–≤–∫–∞ –Ω–∞ {paymentType === 'advance' ? '–∞–≤–∞–Ω—Å' : '–ø—Ä–µ–º–∏—é'} {amount} ‚ÇΩ –ø–µ—Ä–µ–¥–∞–Ω–∞ HR
          </p>
          <StatusBadge status="processing" size="lg" />
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-4">
      <Button 
        variant="ghost" 
        onClick={() => onNavigate('main')}
        className="mb-2"
      >
        <ArrowLeft className="h-4 w-4 mr-2" />
        –ù–∞–∑–∞–¥
      </Button>

      <Card>
        <CardHeader>
          <h2 className="font-semibold">üí∞ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–ª–∞—Ç—ã</h2>
          <p className="text-sm text-text-secondary">
            –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∞–≤–∞–Ω—Å–∞: <strong>18,200 ‚ÇΩ</strong>
          </p>
        </CardHeader>
        <CardContent className="space-y-4">
          <div>
            <label className="block text-sm font-medium mb-2">–¢–∏–ø –≤—ã–ø–ª–∞—Ç—ã</label>
            <div className="grid grid-cols-2 gap-2">
              <Button
                variant={paymentType === 'advance' ? 'default' : 'secondary'}
                onClick={() => setPaymentType('advance')}
                className="text-sm"
              >
                üí∞ –ê–≤–∞–Ω—Å
              </Button>
              <Button
                variant={paymentType === 'bonus' ? 'default' : 'secondary'}
                onClick={() => setPaymentType('bonus')}
                className="text-sm"
              >
                üéÅ –ü—Ä–µ–º–∏—è
              </Button>
            </div>
          </div>

          <div>
            <label className="block text-sm font-medium mb-2">
              –°—É–º–º–∞ ({paymentType === 'advance' ? '–∞–≤–∞–Ω—Å–∞' : '–ø—Ä–µ–º–∏–∏'}) ‚ÇΩ
            </label>
            <input
              type="number"
              value={amount}
              onChange={(e) => setAmount(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É"
              className="w-full p-3 border border-border-light rounded-lg"
              max={paymentType === 'advance' ? '18200' : '50000'}
            />
          </div>

          {paymentType === 'bonus' && (
            <div>
              <label className="block text-sm font-medium mb-2">–û—Å–Ω–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–µ–º–∏–∏</label>
              <textarea
                value={reason}
                onChange={(e) => setReason(e.target.value)}
                placeholder="–û–ø–∏—à–∏—Ç–µ –æ—Å–Ω–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–µ–º–∏–∏..."
                className="w-full h-20 p-3 border border-border-light rounded-lg resize-none"
              />
            </div>
          )}

          <div className="bg-muted p-3 rounded-lg">
            <h4 className="font-medium text-sm mb-2">‚ÑπÔ∏è –£—Å–ª–æ–≤–∏—è:</h4>
            <ul className="text-xs text-text-secondary space-y-1">
              {paymentType === 'advance' ? (
                <>
                  <li>‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 50% –æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∫–∞</li>
                  <li>‚Ä¢ –£–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –∑–∞—Ä–ø–ª–∞—Ç–µ</li>
                  <li>‚Ä¢ –†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –¥–æ 2 —á–∞—Å–æ–≤</li>
                </>
              ) : (
                <>
                  <li>‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ</li>
                  <li>‚Ä¢ –†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –¥–æ 24 —á–∞—Å–æ–≤</li>
                  <li>‚Ä¢ –ó–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π —Ä–∞–±–æ—Ç—ã</li>
                </>
              )}
            </ul>
          </div>

          <Button 
            onClick={handleSubmit}
            disabled={!amount || (paymentType === 'bonus' && !reason)}
            className="w-full"
          >
            üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
          </Button>
        </CardContent>
      </Card>
    </div>
  );
};

// –≠–∫—Ä–∞–Ω "–ú–æ–∏ –ø—Ä–æ–¥–∞–∂–∏"
const MySalesScreen: React.FC<{ onNavigate: (screenId: string) => void }> = ({ onNavigate }) => {
  const salesData = [
    {
      date: '25 –∏—é–ª—è',
      checks: 18,
      amount: 24850,
      avgCheck: 1380,
      rank: 3
    },
    {
      date: '24 –∏—é–ª—è', 
      checks: 15,
      amount: 19200,
      avgCheck: 1280,
      rank: 5
    },
    {
      date: '23 –∏—é–ª—è',
      checks: 22,
      amount: 31400,
      avgCheck: 1427,
      rank: 2
    }
  ];

  return (
    <div className="space-y-4">
      <Button 
        variant="ghost" 
        onClick={() => onNavigate('main')}
        className="mb-2"
      >
        <ArrowLeft className="h-4 w-4 mr-2" />
        –ù–∞–∑–∞–¥
      </Button>

      <div className="bg-primary text-primary-foreground p-4 rounded-lg">
        <h2 className="font-semibold">üìä –ú–æ–∏ –ø—Ä–æ–¥–∞–∂–∏</h2>
        <p className="text-sm opacity-90 mt-1">
          –ó–∞ –Ω–µ–¥–µ–ª—é: <strong>75,450 ‚ÇΩ</strong> ‚Ä¢ –†–µ–π—Ç–∏–Ω–≥: <strong>#3 –∏–∑ 89</strong>
        </p>
        <div className="flex gap-4 mt-2 text-xs">
          <span>üèÜ –ß–µ–∫–æ–≤: 55</span>
          <span>üìà –†–æ—Å—Ç: +12%</span>
        </div>
      </div>

      <div className="grid grid-cols-2 gap-3">
        <Card>
          <CardContent className="p-3 text-center">
            <p className="text-2xl font-bold text-success">24,850 ‚ÇΩ</p>
            <p className="text-xs text-text-secondary">–°–µ–≥–æ–¥–Ω—è</p>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="p-3 text-center">
            <p className="text-2xl font-bold text-primary">1,380 ‚ÇΩ</p>
            <p className="text-xs text-text-secondary">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</p>
          </CardContent>
        </Card>
      </div>

      <div className="space-y-3">
        {salesData.map((day, index) => (
          <Card key={index}>
            <CardContent className="p-4">
              <div className="flex justify-between items-start">
                <div>
                  <h3 className="font-medium">{day.date}</h3>
                  <p className="text-sm text-text-secondary">
                    {day.checks} —á–µ–∫–æ–≤ ‚Ä¢ –°—Ä–µ–¥–Ω–∏–π: {day.avgCheck} ‚ÇΩ
                  </p>
                </div>
                <div className="text-right">
                  <div className="text-lg font-semibold text-success">
                    {day.amount.toLocaleString()} ‚ÇΩ
                  </div>
                  <Badge variant={day.rank <= 3 ? 'default' : 'secondary'}>
                    #{day.rank} –º–µ—Å—Ç–æ
                  </Badge>
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      <div className="grid grid-cols-2 gap-2">
        <Button variant="secondary" className="text-sm">
          üéØ –ü–ª–∞–Ω –º–µ—Å—è—Ü–∞
        </Button>
        <Button variant="secondary" className="text-sm">
          üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        </Button>
      </div>
    </div>
  );
};

// –≠–∫—Ä–∞–Ω –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–ø—É—Å–∫–∞
const VacationRequestScreen: React.FC<{ onNavigate: (screenId: string) => void }> = ({ onNavigate }) => {
  const [vacationType, setVacationType] = useState('vacation');
  const [startDate, setStartDate] = useState('');
  const [endDate, setEndDate] = useState('');

  return (
    <div className="space-y-4">
      <Button variant="ghost" onClick={() => onNavigate('main')} className="mb-2">
        <ArrowLeft className="h-4 w-4 mr-2" />
        –ù–∞–∑–∞–¥
      </Button>

      <Card>
        <CardHeader>
          <h2 className="font-semibold">üèñÔ∏è –ó–∞—è–≤–∫–∞ –Ω–∞ –æ—Ç–ø—É—Å–∫</h2>
        </CardHeader>
        <CardContent className="space-y-4">
          <div>
            <label className="block text-sm font-medium mb-2">–¢–∏–ø –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è</label>
            <div className="grid grid-cols-2 gap-2">
              <Button
                variant={vacationType === 'vacation' ? 'default' : 'secondary'}
                onClick={() => setVacationType('vacation')}
                className="text-sm"
              >
                üèñÔ∏è –û—Ç–ø—É—Å–∫
              </Button>
              <Button
                variant={vacationType === 'sick' ? 'default' : 'secondary'}
                onClick={() => setVacationType('sick')}
                className="text-sm"
              >
                üè• –ë–æ–ª—å–Ω–∏—á–Ω—ã–π
              </Button>
            </div>
          </div>

          <div className="grid grid-cols-2 gap-3">
            <div>
              <label className="block text-sm font-medium mb-2">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</label>
              <input
                type="date"
                value={startDate}
                onChange={(e) => setStartDate(e.target.value)}
                className="w-full p-2 border border-border-light rounded-lg text-sm"
              />
            </div>
            <div>
              <label className="block text-sm font-medium mb-2">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</label>
              <input
                type="date"
                value={endDate}
                onChange={(e) => setEndDate(e.target.value)}
                className="w-full p-2 border border-border-light rounded-lg text-sm"
              />
            </div>
          </div>

          <Button className="w-full">
            üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
          </Button>
        </CardContent>
      </Card>
    </div>
  );
};

// –≠–∫—Ä–∞–Ω –º–æ–µ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞
const MyPropertyScreen: React.FC<{ onNavigate: (screenId: string) => void }> = ({ onNavigate }) => {
  const propertyItems = [
    { name: '–†–∞–±–æ—á–∞—è —Ñ–æ—Ä–º–∞', category: '–û–¥–µ–∂–¥–∞', status: '–í—ã–¥–∞–Ω–æ', date: '2025-06-01' },
    { name: '–ü–ª–∞–Ω—à–µ—Ç Samsung', category: '–¢–µ—Ö–Ω–∏–∫–∞', status: '–í—ã–¥–∞–Ω–æ', date: '2025-06-15' },
    { name: '–°–∫–∞–Ω–µ—Ä —à—Ç—Ä–∏—Ö-–∫–æ–¥–æ–≤', category: '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', status: '–í–æ–∑–≤—Ä–∞—â–µ–Ω–æ', date: '2025-07-20' }
  ];

  return (
    <div className="space-y-4">
      <Button variant="ghost" onClick={() => onNavigate('main')} className="mb-2">
        <ArrowLeft className="h-4 w-4 mr-2" />
        –ù–∞–∑–∞–¥
      </Button>

      <div className="bg-primary text-primary-foreground p-4 rounded-lg">
        <h2 className="font-semibold">üì¶ –ú–æ–µ –∏–º—É—â–µ—Å—Ç–≤–æ</h2>
        <p className="text-sm opacity-90 mt-1">
          –í—ã–¥–∞–Ω–æ: <strong>2 –ø—Ä–µ–¥–º–µ—Ç–∞</strong> ‚Ä¢ –í–æ–∑–≤—Ä–∞—â–µ–Ω–æ: <strong>1</strong>
        </p>
      </div>

      <div className="space-y-3">
        {propertyItems.map((item, index) => (
          <Card key={index}>
            <CardContent className="p-4">
              <div className="flex justify-between items-start">
                <div>
                  <h3 className="font-medium">{item.name}</h3>
                  <p className="text-sm text-text-secondary">{item.category}</p>
                  <p className="text-xs text-text-secondary">–í—ã–¥–∞–Ω–æ: {item.date}</p>
                </div>
                <Badge variant={item.status === '–í—ã–¥–∞–Ω–æ' ? 'default' : 'secondary'}>
                  {item.status}
                </Badge>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      <Button className="w-full" variant="secondary">
        üìã –ó–∞–ø—Ä–æ—Å–∏—Ç—å –∏–º—É—â–µ—Å—Ç–≤–æ
      </Button>
    </div>
  );
};

// –≠–∫—Ä–∞–Ω –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è
const BirthdaysScreen: React.FC<{ onNavigate: (screenId: string) => void }> = ({ onNavigate }) => {
  const birthdays = [
    { name: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞', date: '27 –∏—é–ª—è', department: '–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂' },
    { name: '–ü–µ—Ç—Ä –ö–æ–∑–ª–æ–≤', date: '30 –∏—é–ª—è', department: '–°–∫–ª–∞–¥' },
    { name: '–ï–ª–µ–Ω–∞ –í–∞—Å–∏–ª—å–µ–≤–∞', date: '2 –∞–≤–≥—É—Å—Ç–∞', department: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è' }
  ];

  return (
    <div className="space-y-4">
      <Button variant="ghost" onClick={() => onNavigate('main')} className="mb-2">
        <ArrowLeft className="h-4 w-4 mr-2" />
        –ù–∞–∑–∞–¥
      </Button>

      <div className="bg-primary text-primary-foreground p-4 rounded-lg">
        <h2 className="font-semibold">üéÇ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è</h2>
        <p className="text-sm opacity-90 mt-1">
          –ë–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–ª–ª–µ–≥
        </p>
      </div>

      <div className="space-y-3">
        {birthdays.map((birthday, index) => (
          <Card key={index}>
            <CardContent className="p-4">
              <div className="flex items-center gap-3">
                <div className="w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center">
                  üéÇ
                </div>
                <div className="flex-1">
                  <h3 className="font-medium">{birthday.name}</h3>
                  <p className="text-sm text-text-secondary">{birthday.department}</p>
                </div>
                <div className="text-right">
                  <p className="font-medium text-primary">{birthday.date}</p>
                  <Button size="sm" className="mt-1">
                    üéâ –ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å
                  </Button>
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  );
};

// –≠–∫—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—è
const ProfileScreen: React.FC<{ onNavigate: (screenId: string) => void }> = ({ onNavigate }) => {
  const profileData = {
    name: '–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤',
    position: '–ü—Ä–æ–¥–∞–≤–µ—Ü-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç',
    department: '–û—Ç–¥–µ–ª –∫–æ—Å–º–µ—Ç–∏–∫–∏',
    phone: '+7 (999) 123-45-67',
    email: 'alexey.ivanov@company.com',
    startDate: '2024-03-15',
    birthDate: '1990-12-08'
  };

  return (
    <div className="space-y-4">
      <Button variant="ghost" onClick={() => onNavigate('main')} className="mb-2">
        <ArrowLeft className="h-4 w-4 mr-2" />
        –ù–∞–∑–∞–¥
      </Button>

      <Card>
        <CardContent className="p-6">
          <div className="text-center mb-6">
            <div className="w-20 h-20 bg-primary rounded-full flex items-center justify-center mx-auto mb-3">
              <span className="text-2xl text-primary-foreground font-semibold">–ê–ò</span>
            </div>
            <h2 className="text-xl font-semibold">{profileData.name}</h2>
            <p className="text-text-secondary">{profileData.position}</p>
          </div>

          <div className="space-y-4">
            <div className="flex justify-between">
              <span className="text-text-secondary">–û—Ç–¥–µ–ª:</span>
              <span className="font-medium">{profileData.department}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-text-secondary">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
              <span className="font-medium">{profileData.phone}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-text-secondary">Email:</span>
              <span className="font-medium text-sm">{profileData.email}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-text-secondary">–î–∞—Ç–∞ –ø—Ä–∏–µ–º–∞:</span>
              <span className="font-medium">{profileData.startDate}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-text-secondary">–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è:</span>
              <span className="font-medium">{profileData.birthDate}</span>
            </div>
          </div>
        </CardContent>
      </Card>

      <Button className="w-full" variant="secondary">
        ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
      </Button>
    </div>
  );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Telegram –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
export const TelegramInterface: React.FC = () => {
  const [currentScreen, setCurrentScreen] = useState('main');

  const screens: Record<string, TelegramScreen> = {
    main: {
      id: 'main',
      title: '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
      component: MainMenuScreen
    },
    'payment-request': {
      id: 'payment-request',
      title: '–ó–∞–ø—Ä–æ—Å –≤—ã–ø–ª–∞—Ç—ã',
      component: PaymentRequestScreen
    },
    'my-sales': {
      id: 'my-sales',
      title: '–ú–æ–∏ –ø—Ä–æ–¥–∞–∂–∏',
      component: MySalesScreen
    },
    'vacation-request': {
      id: 'vacation-request',
      title: '–ó–∞—è–≤–∫–∞ –Ω–∞ –æ—Ç–ø—É—Å–∫',
      component: VacationRequestScreen
    },
    'my-property': {
      id: 'my-property',
      title: '–ú–æ–µ –∏–º—É—â–µ—Å—Ç–≤–æ',
      component: MyPropertyScreen
    },
    birthdays: {
      id: 'birthdays',
      title: '–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è',
      component: BirthdaysScreen
    },
    profile: {
      id: 'profile',
      title: '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å',
      component: ProfileScreen
    }
  };

  const CurrentScreenComponent = screens[currentScreen]?.component || MainMenuScreen;

  return (
    <div className="max-w-sm mx-auto bg-background min-h-screen">
      {/* Telegram-style header */}
      <div className="bg-primary text-primary-foreground p-4 sticky top-0 z-10">
        <div className="flex items-center gap-3">
          <div className="w-8 h-8 bg-primary-foreground/20 rounded-full flex items-center justify-center">
            <Users className="h-4 w-4" />
          </div>
          <div>
            <h1 className="font-semibold">HR Portal Bot</h1>
            <p className="text-xs opacity-75">–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º</p>
          </div>
        </div>
      </div>

      {/* Content */}
      <div className="p-4">
        <CurrentScreenComponent onNavigate={setCurrentScreen} />
      </div>
    </div>
  );
};