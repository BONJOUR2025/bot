from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from ...utils.logger import log
from ...services.users import load_users
from ...keyboards.reply_user import get_main_menu


async def get_user_info_user(update: Update,
                             context: ContextTypes.DEFAULT_TYPE) -> None:
    """–í—ã–≤–æ–¥–∏—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞."""
    user_id = str(update.effective_user.id)
    users = load_users()
    user = users.get(user_id)
    if not user:
        if update.message:
            await update.message.reply_text(
                "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                reply_markup=get_main_menu(),
            )
        return
    name = user.get("name", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
    greeting_text = f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {name}!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    if update.message:
        await update.message.reply_text(greeting_text, reply_markup=get_main_menu())


async def home_handler_user(update: Update,
                            context: ContextTypes.DEFAULT_TYPE) -> int:
    log(
        f"DEBUG [home_handler] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{
            update.message.text if update.message else ''}'")
    context.user_data.clear()
    if update.message:
        await update.message.reply_text(
            "üè† –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
            reply_markup=get_main_menu(),
        )
    return ConversationHandler.END
