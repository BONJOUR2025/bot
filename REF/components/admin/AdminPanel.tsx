import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '../ui/card';
import { Button } from '../ui/button';
import { Input } from '../ui/input';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';
import { Badge } from '../ui/badge';
import { StatusBadge } from '../design-system/StatusBadge';
import { ActionCard } from '../design-system/ActionCard';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';
import { Calendar } from '../ui/calendar';
import { 
  Users, 
  DollarSign, 
  Clock, 
  BarChart3, 
  Search,
  Bell,
  Settings,
  TrendingUp,
  CheckCircle,
  XCircle,
  AlertCircle,
  Calendar as CalendarIcon,
  Filter,
  MessageSquare,
  Gift,
  Briefcase,
  Package,
  FileText,
  Cake,
  BookOpen,
  Download,
  Upload,
  Eye,
  Edit,
  Trash2,
  UserPlus,
  Send,
  ShieldAlert,
  PlusCircle
} from 'lucide-react';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Dashboard
const Dashboard: React.FC = () => {
  const stats = [
    {
      title: '–ü—Ä–æ–¥–∞–∂–∏ –∫–æ—Å–º–µ—Ç–∏–∫–∏ —Å–µ–≥–æ–¥–Ω—è',
      value: '256,400 ‚ÇΩ',
      change: '+18%',
      icon: <TrendingUp className="h-5 w-5" />,
      color: 'text-success'
    },
    {
      title: '–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—ã–ø–ª–∞—Ç—É',
      value: '12',
      change: '+3',
      icon: <DollarSign className="h-5 w-5" />,
      color: 'text-warning'
    },
    {
      title: '–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –≤ –æ—Ç–ø—É—Å–∫–µ',
      value: '5',
      change: '+1',
      icon: <Users className="h-5 w-5" />,
      color: 'text-primary'
    },
    {
      title: '–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
      value: '89',
      change: '+2',
      icon: <Users className="h-5 w-5" />,
      color: 'text-success'
    }
  ];

  const recentRequests = [
    {
      id: 1,
      employee: '–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤',
      amount: 2500,
      status: 'waiting' as const,
      time: '14:32',
      type: '–ê–≤–∞–Ω—Å',
      priority: 'normal'
    },
    {
      id: 2,
      employee: '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞',
      amount: 1800,
      status: 'approved' as const,
      time: '13:15',
      type: '–ü—Ä–µ–º–∏—è',
      priority: 'normal'
    },
    {
      id: 3,
      employee: '–î–º–∏—Ç—Ä–∏–π –°–∏–¥–æ—Ä–æ–≤',
      amount: 3200,
      status: 'waiting' as const,
      time: '12:45',
      type: '–ó–∞—Ä–ø–ª–∞—Ç–∞',
      priority: 'high'
    }
  ];

  const upcomingBirthdays = [
    { name: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞', date: '27 –∏—é–ª—è', department: '–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂' },
    { name: '–ü–µ—Ç—Ä –ö–æ–∑–ª–æ–≤', date: '30 –∏—é–ª—è', department: '–°–∫–ª–∞–¥' },
    { name: '–ï–ª–µ–Ω–∞ –í–∞—Å–∏–ª—å–µ–≤–∞', date: '2 –∞–≤–≥—É—Å—Ç–∞', department: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è' }
  ];

  const employeesOnLeave = [
    { name: '–û–ª–µ–≥ –ú–∏—Ö–∞–π–ª–æ–≤', period: '25 –∏—é–ª—è - 10 –∞–≤–≥—É—Å—Ç–∞', type: '–û—Ç–ø—É—Å–∫' },
    { name: '–°–≤–µ—Ç–ª–∞–Ω–∞ –ö—É–∑–Ω–µ—Ü–æ–≤–∞', period: '20 –∏—é–ª—è - 27 –∏—é–ª—è', type: '–ë–æ–ª—å–Ω–∏—á–Ω—ã–π' }
  ];

  return (
    <div className="space-y-6">
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        {stats.map((stat, index) => (
          <Card key={index}>
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm text-text-secondary">{stat.title}</p>
                  <p className="text-2xl font-semibold">{stat.value}</p>
                  <p className={`text-sm ${stat.color}`}>
                    {stat.change}
                  </p>
                </div>
                <div className={`${stat.color}`}>
                  {stat.icon}
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-12 gap-6">
        {/* –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—ã–ø–ª–∞—Ç—É */}
        <Card className="lg:col-span-8">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <DollarSign className="h-5 w-5" />
              –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—ã–ø–ª–∞—Ç—É
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-3">
              {recentRequests.map((request) => (
                <div key={request.id} className="flex items-center justify-between p-3 border border-border-light rounded-lg">
                  <div className="flex items-center gap-3">
                    {request.priority === 'high' && (
                      <AlertCircle className="h-4 w-4 text-danger" />
                    )}
                    <div>
                      <p className="font-medium">{request.employee}</p>
                      <p className="text-sm text-text-secondary">
                        {request.type} ‚Ä¢ {request.time}
                      </p>
                    </div>
                  </div>
                  <div className="flex items-center gap-3">
                    <div className="text-right">
                      <p className="font-semibold">{request.amount} ‚ÇΩ</p>
                      <StatusBadge status={request.status} size="sm" />
                    </div>
                    {request.status === 'waiting' && (
                      <div className="flex gap-1">
                        <Button size="sm" variant="default">
                          <CheckCircle className="h-4 w-4" />
                        </Button>
                        <Button size="sm" variant="destructive">
                          <XCircle className="h-4 w-4" />
                        </Button>
                      </div>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* –ë–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è */}
        <Card className="lg:col-span-4">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Cake className="h-5 w-5" />
              –ë–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-3">
              {upcomingBirthdays.map((birthday, index) => (
                <div key={index} className="flex items-center gap-3 p-2 bg-muted rounded-lg">
                  <div className="w-8 h-8 bg-primary/10 rounded-full flex items-center justify-center">
                    üéÇ
                  </div>
                  <div>
                    <p className="font-medium text-sm">{birthday.name}</p>
                    <p className="text-xs text-text-secondary">{birthday.date}</p>
                    <p className="text-xs text-text-secondary">{birthday.department}</p>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –≤ –æ—Ç–ø—É—Å–∫–µ */}
        <Card className="lg:col-span-6">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <CalendarIcon className="h-5 w-5" />
              –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –≤ –æ—Ç–ø—É—Å–∫–µ
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-3">
              {employeesOnLeave.map((employee, index) => (
                <div key={index} className="flex items-center justify-between p-3 border border-border-light rounded-lg">
                  <div>
                    <p className="font-medium">{employee.name}</p>
                    <p className="text-sm text-text-secondary">{employee.period}</p>
                  </div>
                  <Badge variant={employee.type === '–ë–æ–ª—å–Ω–∏—á–Ω—ã–π' ? 'destructive' : 'default'}>
                    {employee.type}
                  </Badge>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
        <Card className="lg:col-span-6">
          <CardHeader>
            <CardTitle>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-2 gap-2">
              <Button className="justify-start" variant="secondary" size="sm">
                <UserPlus className="h-4 w-4 mr-2" />
                –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
              </Button>
              <Button className="justify-start" variant="secondary" size="sm">
                <MessageSquare className="h-4 w-4 mr-2" />
                –†–∞—Å—Å—ã–ª–∫–∞
              </Button>
              <Button className="justify-start" variant="secondary" size="sm">
                <FileText className="h-4 w-4 mr-2" />
                –û—Ç—á–µ—Ç
              </Button>
              <Button className="justify-start" variant="secondary" size="sm">
                <BarChart3 className="h-4 w-4 mr-2" />
                –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
const UsersManagement: React.FC = () => {
  const [searchTerm, setSearchTerm] = useState('');

  const users = [
    {
      id: 1,
      name: '–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤',
      email: 'alexey@example.com',
      status: 'active' as const,
      shifts: 12,
      earnings: 45600,
      store: '–¢–¶ –ú–µ–≥–∞'
    },
    {
      id: 2,
      name: '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞',
      email: 'maria@example.com',
      status: 'active' as const,
      shifts: 8,
      earnings: 28400,
      store: '–¢–¶ –ï–≤—Ä–æ–ø–æ–ª–∏—Å'
    },
    {
      id: 3,
      name: '–î–º–∏—Ç—Ä–∏–π –°–∏–¥–æ—Ä–æ–≤',
      email: 'dmitry@example.com',
      status: 'inactive' as const,
      shifts: 4,
      earnings: 12800,
      store: '–¢–¶ –ê—Ç–ª–∞—Å'
    }
  ];

  const filteredUsers = users.filter(user =>
    user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
    user.email.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="space-y-6">
      {/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
      <div className="flex gap-4">
        <div className="flex-1">
          <Input
            placeholder="–ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="w-full"
          />
        </div>
        <Button variant="secondary">
          <Filter className="h-4 w-4 mr-2" />
          –§–∏–ª—å—Ç—Ä—ã
        </Button>
        <Button>
          <Users className="h-4 w-4 mr-2" />
          –î–æ–±–∞–≤–∏—Ç—å
        </Button>
      </div>

      {/* –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
      <Card>
        <CardHeader>
          <CardTitle>–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ ({filteredUsers.length})</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-3">
            {filteredUsers.map((user) => (
              <div key={user.id} className="flex items-center justify-between p-4 border border-border-light rounded-lg">
                <div className="flex items-center gap-4">
                  <div className="w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center">
                    <Users className="h-5 w-5 text-primary" />
                  </div>
                  <div>
                    <p className="font-medium">{user.name}</p>
                    <p className="text-sm text-text-secondary">{user.email}</p>
                    <p className="text-sm text-text-secondary">{user.store}</p>
                  </div>
                </div>
                
                <div className="flex items-center gap-6">
                  <div className="text-center">
                    <p className="text-sm text-text-secondary">–°–º–µ–Ω—ã</p>
                    <p className="font-semibold">{user.shifts}</p>
                  </div>
                  <div className="text-center">
                    <p className="text-sm text-text-secondary">–ó–∞—Ä–∞–±–æ—Ç–æ–∫</p>
                    <p className="font-semibold">{user.earnings.toLocaleString()} ‚ÇΩ</p>
                  </div>
                  <StatusBadge status={user.status} />
                  <div className="flex gap-2">
                    <Button size="sm" variant="secondary">
                      –ò–∑–º–µ–Ω–∏—Ç—å
                    </Button>
                    <Button size="sm" variant="destructive">
                      –£–¥–∞–ª–∏—Ç—å
                    </Button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

// –°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
const MessagingSystem: React.FC = () => {
  const [selectedTemplate, setSelectedTemplate] = useState('');
  const [message, setMessage] = useState('');
  const [recipients, setRecipients] = useState('all');

  const templates = [
    { id: 'salary', name: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—Ä–ø–ª–∞—Ç–µ', content: '–í–∞—à–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞ –∑–∞ {–º–µ—Å—è—Ü} —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {—Å—É–º–º–∞} —Ä—É–±–ª–µ–π.' },
    { id: 'shift', name: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–º–µ–Ω–µ', content: '–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –∑–∞–≤—Ç—Ä–∞ —É –≤–∞—Å —Å–º–µ–Ω–∞ —Å {–≤—Ä–µ–º—è_–Ω–∞—á–∞–ª–∞} –¥–æ {–≤—Ä–µ–º—è_–æ–∫–æ–Ω—á–∞–Ω–∏—è}.' },
    { id: 'birthday', name: '–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è', content: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è! –ñ–µ–ª–∞–µ–º –∑–¥–æ—Ä–æ–≤—å—è –∏ —É—Å–ø–µ—Ö–æ–≤!' }
  ];

  return (
    <div className="space-y-6">
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <Card className="lg:col-span-2">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <MessageSquare className="h-5 w-5" />
              –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-2">–ü–æ–ª—É—á–∞—Ç–µ–ª–∏</label>
              <Select value={recipients} onValueChange={setRecipients}>
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">–í—Å–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</SelectItem>
                  <SelectItem value="active">–¢–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ</SelectItem>
                  <SelectItem value="department">–ü–æ –æ—Ç–¥–µ–ª–∞–º</SelectItem>
                  <SelectItem value="custom">–í—ã–±—Ä–∞—Ç—å –≤—Ä—É—á–Ω—É—é</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <div>
              <label className="block text-sm font-medium mb-2">–®–∞–±–ª–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è</label>
              <Select value={selectedTemplate} onValueChange={setSelectedTemplate}>
                <SelectTrigger>
                  <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω" />
                </SelectTrigger>
                <SelectContent>
                  {templates.map((template) => (
                    <SelectItem key={template.id} value={template.id}>
                      {template.name}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>

            <div>
              <label className="block text-sm font-medium mb-2">–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è</label>
              <textarea
                className="w-full h-32 p-3 border border-border-light rounded-lg resize-none"
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è..."
                value={message}
                onChange={(e) => setMessage(e.target.value)}
              />
            </div>

            <div className="flex gap-2">
              <Button className="flex-1">
                <Send className="h-4 w-4 mr-2" />
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–π—á–∞—Å
              </Button>
              <Button variant="secondary" className="flex-1">
                <Clock className="h-4 w-4 mr-2" />
                –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å
              </Button>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Å—ã–ª–æ–∫</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="text-center p-4 bg-muted rounded-lg">
                <p className="text-2xl font-bold">127</p>
                <p className="text-sm text-text-secondary">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è</p>
              </div>
              <div className="text-center p-4 bg-muted rounded-lg">
                <p className="text-2xl font-bold">94%</p>
                <p className="text-sm text-text-secondary">–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ</p>
              </div>
              <div className="text-center p-4 bg-muted rounded-lg">
                <p className="text-2xl font-bold">73</p>
                <p className="text-sm text-text-secondary">–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—É—á–∞—Ç–µ–ª–∏</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      <Card>
        <CardHeader>
          <CardTitle>–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-3">
            {[
              { id: 1, subject: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—Ä–ø–ª–∞—Ç–µ', recipients: 89, sent: '25.07.2025 14:30', status: 'delivered' },
              { id: 2, subject: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–º–µ–Ω–µ', recipients: 12, sent: '25.07.2025 09:00', status: 'delivered' },
              { id: 3, subject: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', recipients: 89, sent: '24.07.2025 16:45', status: 'delivered' }
            ].map((broadcast) => (
              <div key={broadcast.id} className="flex items-center justify-between p-3 border border-border-light rounded-lg">
                <div>
                  <p className="font-medium">{broadcast.subject}</p>
                  <p className="text-sm text-text-secondary">
                    {broadcast.recipients} –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π ‚Ä¢ {broadcast.sent}
                  </p>
                </div>
                <StatusBadge status="approved" size="sm" />
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à—Ç—Ä–∞—Ñ–∞–º–∏ –∏ –ø—Ä–µ–º–∏—è–º–∏
const BonusesAndPenalties: React.FC = () => {
  const [filterType, setFilterType] = useState('all');
  const [filterEmployee, setFilterEmployee] = useState('');

  const bonusesData = [
    { id: 1, employee: '–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤', type: 'bonus', amount: 5000, reason: '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –ø—Ä–æ–¥–∞–∂', date: '2025-07-25' },
    { id: 2, employee: '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞', type: 'penalty', amount: -2000, reason: '–û–ø–æ–∑–¥–∞–Ω–∏–µ –Ω–∞ —Ä–∞–±–æ—Ç—É', date: '2025-07-24' },
    { id: 3, employee: '–î–º–∏—Ç—Ä–∏–π –°–∏–¥–æ—Ä–æ–≤', type: 'bonus', amount: 3000, reason: '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏', date: '2025-07-23' }
  ];

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Gift className="h-5 w-5" />
            –®—Ç—Ä–∞—Ñ—ã –∏ –ø—Ä–µ–º–∏–∏
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="flex gap-4 mb-6">
            <Select value={filterType} onValueChange={setFilterType}>
              <SelectTrigger className="w-48">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">–í—Å–µ —Ç–∏–ø—ã</SelectItem>
                <SelectItem value="bonus">–ü—Ä–µ–º–∏–∏</SelectItem>
                <SelectItem value="penalty">–®—Ç—Ä–∞—Ñ—ã</SelectItem>
              </SelectContent>
            </Select>
            
            <Input
              placeholder="–ü–æ–∏—Å–∫ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É..."
              value={filterEmployee}
              onChange={(e) => setFilterEmployee(e.target.value)}
              className="flex-1"
            />
            
            <Button>
              <PlusCircle className="h-4 w-4 mr-2" />
              –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å
            </Button>
          </div>

          <div className="space-y-3">
            {bonusesData.map((item) => (
              <div key={item.id} className="flex items-center justify-between p-4 border border-border-light rounded-lg">
                <div className="flex items-center gap-4">
                  <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                    item.type === 'bonus' ? 'bg-success/10 text-success' : 'bg-danger/10 text-danger'
                  }`}>
                    {item.type === 'bonus' ? '+' : '-'}
                  </div>
                  <div>
                    <p className="font-medium">{item.employee}</p>
                    <p className="text-sm text-text-secondary">{item.reason}</p>
                    <p className="text-xs text-text-secondary">{item.date}</p>
                  </div>
                </div>
                <div className="flex items-center gap-4">
                  <div className={`text-lg font-semibold ${
                    item.type === 'bonus' ? 'text-success' : 'text-danger'
                  }`}>
                    {item.amount > 0 ? '+' : ''}{item.amount} ‚ÇΩ
                  </div>
                  <div className="flex gap-1">
                    <Button size="sm" variant="ghost">
                      <Edit className="h-4 w-4" />
                    </Button>
                    <Button size="sm" variant="ghost">
                      <Trash2 className="h-4 w-4" />
                    </Button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–ø–ª–∞—Ç–∞–º–∏
const PaymentsManagement: React.FC = () => {
  const payments = [
    { id: 1, employee: '–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤', type: '–ê–≤–∞–Ω—Å', amount: 15000, status: 'waiting' as const, date: '2025-07-25', store: '–¢–¶ –ú–µ–≥–∞' },
    { id: 2, employee: '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞', type: '–ó–∞—Ä–ø–ª–∞—Ç–∞', amount: 35000, status: 'approved' as const, date: '2025-07-24', store: '–¢–¶ –ï–≤—Ä–æ–ø–æ–ª–∏—Å' },
    { id: 3, employee: '–î–º–∏—Ç—Ä–∏–π –°–∏–¥–æ—Ä–æ–≤', type: '–ü—Ä–µ–º–∏—è', amount: 8000, status: 'rejected' as const, date: '2025-07-23', store: '–¢–¶ –ê—Ç–ª–∞—Å' }
  ];

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <DollarSign className="h-5 w-5" />
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–ø–ª–∞—Ç–∞–º–∏
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="flex justify-between items-center mb-6">
            <div className="flex gap-4">
              <Select defaultValue="all">
                <SelectTrigger className="w-48">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</SelectItem>
                  <SelectItem value="waiting">–û–∂–∏–¥–∞–Ω–∏–µ</SelectItem>
                  <SelectItem value="approved">–û–¥–æ–±—Ä–µ–Ω–æ</SelectItem>
                  <SelectItem value="rejected">–û—Ç–∫–ª–æ–Ω–µ–Ω–æ</SelectItem>
                </SelectContent>
              </Select>
              
              <Input placeholder="–ü–æ–∏—Å–∫ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É..." className="w-64" />
            </div>
            
            <div className="flex gap-2">
              <Button variant="secondary">
                <Download className="h-4 w-4 mr-2" />
                –≠–∫—Å–ø–æ—Ä—Ç PDF
              </Button>
              <Button variant="secondary">
                <Eye className="h-4 w-4 mr-2" />
                –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–æ—Ç–∞
              </Button>
            </div>
          </div>

          <div className="space-y-3">
            {payments.map((payment) => (
              <div key={payment.id} className="flex items-center justify-between p-4 border border-border-light rounded-lg">
                <div>
                  <p className="font-medium">{payment.employee}</p>
                  <p className="text-sm text-text-secondary">
                    {payment.type} ‚Ä¢ {payment.store} ‚Ä¢ {payment.date}
                  </p>
                </div>
                <div className="flex items-center gap-4">
                  <div className="text-right">
                    <p className="font-semibold">{payment.amount.toLocaleString()} ‚ÇΩ</p>
                    <StatusBadge status={payment.status} size="sm" />
                  </div>
                  <div className="flex gap-1">
                    <Button size="sm" variant="default">
                      <CheckCircle className="h-4 w-4" />
                    </Button>
                    <Button size="sm" variant="destructive">
                      <XCircle className="h-4 w-4" />
                    </Button>
                    <Button size="sm" variant="ghost">
                      <Edit className="h-4 w-4" />
                    </Button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

// –ö–æ–Ω—Ç—Ä–æ–ª—å –≤—ã–ø–ª–∞—Ç
const PaymentControl: React.FC = () => {
  const warnings = [
    { id: 1, type: 'limit_exceeded', employee: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', amount: 45000, limit: 35000, message: '–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –≤—ã–ø–ª–∞—Ç' },
    { id: 2, type: 'long_waiting', employee: '–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞', days: 5, message: '–ó–∞—è–≤–∫–∞ –æ–∂–∏–¥–∞–µ—Ç –±–æ–ª–µ–µ 3 –¥–Ω–µ–π' },
    { id: 3, type: 'suspicious', employee: '–ü–µ—Ç—Ä –ö–æ–∑–ª–æ–≤', count: 4, message: '–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –º–Ω–æ–≥–æ –∑–∞—è–≤–æ–∫ –∑–∞ –Ω–µ–¥–µ–ª—é' }
  ];

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <ShieldAlert className="h-5 w-5" />
            –ö–æ–Ω—Ç—Ä–æ–ª—å –≤—ã–ø–ª–∞—Ç
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {warnings.map((warning) => (
              <div key={warning.id} className="flex items-start gap-4 p-4 border-l-4 border-warning bg-warning/5 rounded-lg">
                <AlertCircle className="h-5 w-5 text-warning mt-0.5" />
                <div className="flex-1">
                  <p className="font-medium">{warning.message}</p>
                  <p className="text-sm text-text-secondary">
                    –°–æ—Ç—Ä—É–¥–Ω–∏–∫: {warning.employee}
                    {warning.amount && ` ‚Ä¢ –°—É–º–º–∞: ${warning.amount.toLocaleString()} ‚ÇΩ`}
                    {warning.limit && ` ‚Ä¢ –õ–∏–º–∏—Ç: ${warning.limit.toLocaleString()} ‚ÇΩ`}
                    {warning.days && ` ‚Ä¢ –î–Ω–µ–π –æ–∂–∏–¥–∞–Ω–∏—è: ${warning.days}`}
                    {warning.count && ` ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫: ${warning.count}`}
                  </p>
                </div>
                <div className="flex gap-2">
                  <Button size="sm" variant="secondary">
                    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
                  </Button>
                  <Button size="sm" variant="default">
                    –†–µ—à–∏—Ç—å
                  </Button>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞–º–∏
const VacationsManagement: React.FC = () => {
  const vacations = [
    { id: 1, employee: '–û–ª–µ–≥ –ú–∏—Ö–∞–π–ª–æ–≤', startDate: '2025-07-25', endDate: '2025-08-10', type: '–û—Ç–ø—É—Å–∫', status: 'active' as const },
    { id: 2, employee: '–°–≤–µ—Ç–ª–∞–Ω–∞ –ö—É–∑–Ω–µ—Ü–æ–≤–∞', startDate: '2025-07-20', endDate: '2025-07-27', type: '–ë–æ–ª—å–Ω–∏—á–Ω—ã–π', status: 'active' as const },
    { id: 3, employee: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞', startDate: '2025-08-01', endDate: '2025-08-15', type: '–û—Ç–ø—É—Å–∫', status: 'waiting' as const }
  ];

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <CalendarIcon className="h-5 w-5" />
            –û—Ç–ø—É—Å–∫–∞ –∏ –±–æ–ª—å–Ω–∏—á–Ω—ã–µ
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="flex justify-between items-center mb-6">
            <div className="flex gap-4">
              <Select defaultValue="all">
                <SelectTrigger className="w-48">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">–í—Å–µ —Ç–∏–ø—ã</SelectItem>
                  <SelectItem value="vacation">–û—Ç–ø—É—Å–∫–∞</SelectItem>
                  <SelectItem value="sick">–ë–æ–ª—å–Ω–∏—á–Ω—ã–µ</SelectItem>
                </SelectContent>
              </Select>
              <Input placeholder="–ü–æ–∏—Å–∫ –ø–æ –º–µ—Å—è—Ü—É..." className="w-48" />
            </div>
            <Button>
              <PlusCircle className="h-4 w-4 mr-2" />
              –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—É—Å–∫
            </Button>
          </div>

          <div className="space-y-3">
            {vacations.map((vacation) => (
              <div key={vacation.id} className="flex items-center justify-between p-4 border border-border-light rounded-lg">
                <div>
                  <p className="font-medium">{vacation.employee}</p>
                  <p className="text-sm text-text-secondary">
                    {vacation.startDate} - {vacation.endDate}
                  </p>
                </div>
                <div className="flex items-center gap-4">
                  <Badge variant={vacation.type === '–ë–æ–ª—å–Ω–∏—á–Ω—ã–π' ? 'destructive' : 'default'}>
                    {vacation.type}
                  </Badge>
                  <StatusBadge status={vacation.status} size="sm" />
                  <div className="flex gap-1">
                    <Button size="sm" variant="ghost">
                      <Edit className="h-4 w-4" />
                    </Button>
                    <Button size="sm" variant="ghost">
                      <Trash2 className="h-4 w-4" />
                    </Button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º—É—â–µ—Å—Ç–≤–æ–º
const PropertyManagement: React.FC = () => {
  const property = [
    { id: 1, employee: '–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤', item: '–†–∞–±–æ—á–∞—è —Ñ–æ—Ä–º–∞', category: '–û–¥–µ–∂–¥–∞', status: 'issued', date: '2025-07-01' },
    { id: 2, employee: '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞', item: '–ü–ª–∞–Ω—à–µ—Ç Samsung', category: '–¢–µ—Ö–Ω–∏–∫–∞', status: 'issued', date: '2025-06-15' },
    { id: 3, employee: '–î–º–∏—Ç—Ä–∏–π –°–∏–¥–æ—Ä–æ–≤', item: '–°–∫–∞–Ω–µ—Ä —à—Ç—Ä–∏—Ö-–∫–æ–¥–æ–≤', category: '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', status: 'returned', date: '2025-07-20' }
  ];

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Package className="h-5 w-5" />
            –ò–º—É—â–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="flex justify-between items-center mb-6">
            <div className="flex gap-4">
              <Select defaultValue="all">
                <SelectTrigger className="w-48">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</SelectItem>
                  <SelectItem value="clothes">–û–¥–µ–∂–¥–∞</SelectItem>
                  <SelectItem value="tech">–¢–µ—Ö–Ω–∏–∫–∞</SelectItem>
                  <SelectItem value="equipment">–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</SelectItem>
                </SelectContent>
              </Select>
              <Input placeholder="–ü–æ–∏—Å–∫ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É..." className="w-64" />
            </div>
            <Button>
              <PlusCircle className="h-4 w-4 mr-2" />
              –í—ã–¥–∞—Ç—å –∏–º—É—â–µ—Å—Ç–≤–æ
            </Button>
          </div>

          <div className="space-y-3">
            {property.map((item) => (
              <div key={item.id} className="flex items-center justify-between p-4 border border-border-light rounded-lg">
                <div className="flex items-center gap-4">
                  <div className="w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center">
                    <Package className="h-5 w-5 text-primary" />
                  </div>
                  <div>
                    <p className="font-medium">{item.item}</p>
                    <p className="text-sm text-text-secondary">
                      {item.employee} ‚Ä¢ {item.category} ‚Ä¢ {item.date}
                    </p>
                  </div>
                </div>
                <div className="flex items-center gap-4">
                  <StatusBadge 
                    status={item.status === 'issued' ? 'active' : 'inactive'} 
                    size="sm" 
                  />
                  <div className="flex gap-1">
                    <Button size="sm" variant="ghost">
                      <Edit className="h-4 w-4" />
                    </Button>
                    <Button size="sm" variant="ghost">
                      <Eye className="h-4 w-4" />
                    </Button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

// –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è
const BirthdaysManagement: React.FC = () => {
  const birthdays = [
    { id: 1, name: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞', date: '27 –∏—é–ª—è', department: '–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂', age: 28 },
    { id: 2, name: '–ü–µ—Ç—Ä –ö–æ–∑–ª–æ–≤', date: '30 –∏—é–ª—è', department: '–°–∫–ª–∞–¥', age: 35 },
    { id: 3, name: '–ï–ª–µ–Ω–∞ –í–∞—Å–∏–ª—å–µ–≤–∞', date: '2 –∞–≤–≥—É—Å—Ç–∞', department: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è', age: 42 },
    { id: 4, name: '–ú–∏—Ö–∞–∏–ª –û—Ä–ª–æ–≤', date: '5 –∞–≤–≥—É—Å—Ç–∞', department: '–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂', age: 31 },
    { id: 5, name: '–û–ª—å–≥–∞ –ù–∏–∫–∏—Ç–∏–Ω–∞', date: '12 –∞–≤–≥—É—Å—Ç–∞', department: '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è', age: 39 }
  ];

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Cake className="h-5 w-5" />
            –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {birthdays.map((birthday) => (
              <Card key={birthday.id} className="p-4">
                <div className="text-center">
                  <div className="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-3">
                    üéÇ
                  </div>
                  <h3 className="font-semibold">{birthday.name}</h3>
                  <p className="text-sm text-text-secondary">{birthday.department}</p>
                  <p className="text-sm font-medium text-primary">{birthday.date}</p>
                  <p className="text-xs text-text-secondary">–ò—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è {birthday.age} –ª–µ—Ç</p>
                  <Button size="sm" className="mt-3 w-full">
                    <MessageSquare className="h-4 w-4 mr-2" />
                    –ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å
                  </Button>
                </div>
              </Card>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä–µ–º
const DictionaryManagement: React.FC = () => {
  const dictionaries = [
    { id: 1, name: '–î–æ–ª–∂–Ω–æ—Å—Ç–∏', count: 12, lastUpdated: '2025-07-20' },
    { id: 2, name: '–¢–∏–ø—ã –≤—ã–ø–ª–∞—Ç', count: 8, lastUpdated: '2025-07-15' },
    { id: 3, name: '–û—Ç–¥–µ–ª—ã', count: 6, lastUpdated: '2025-07-10' },
    { id: 4, name: '–¢–∏–ø—ã –∏–º—É—â–µ—Å—Ç–≤–∞', count: 15, lastUpdated: '2025-07-05' }
  ];

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <BookOpen className="h-5 w-5" />
            –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            {dictionaries.map((dict) => (
              <Card key={dict.id} className="p-4">
                <div className="flex items-center justify-between">
                  <div>
                    <h3 className="font-semibold">{dict.name}</h3>
                    <p className="text-sm text-text-secondary">
                      {dict.count} –∑–∞–ø–∏—Å–µ–π ‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–æ {dict.lastUpdated}
                    </p>
                  </div>
                  <div className="flex gap-2">
                    <Button size="sm" variant="ghost">
                      <Edit className="h-4 w-4" />
                    </Button>
                    <Button size="sm" variant="ghost">
                      <Eye className="h-4 w-4" />
                    </Button>
                  </div>
                </div>
              </Card>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã
const SystemSettings: React.FC = () => {
  return (
    <div className="space-y-6">
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Settings className="h-5 w-5" />
              –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–ø–∞–Ω–∏–∏
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-2">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</label>
              <Input defaultValue="–û–û–û –†–æ–∑–Ω–∏—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è" />
            </div>
            <div>
              <label className="block text-sm font-medium mb-2">–†–∞–±–æ—á–∏–µ —á–∞—Å—ã</label>
              <Input defaultValue="09:00 - 21:00" />
            </div>
            <div>
              <label className="block text-sm font-medium mb-2">–õ–∏–º–∏—Ç –≤—ã–ø–ª–∞—Ç</label>
              <Input defaultValue="50000" type="number" />
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <MessageSquare className="h-5 w-5" />
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-2">–¢–æ–∫–µ–Ω –±–æ—Ç–∞</label>
              <Input type="password" placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞" />
            </div>
            <div>
              <label className="block text-sm font-medium mb-2">Webhook URL</label>
              <Input placeholder="https://your-domain.com/webhook" />
            </div>
            <Button className="w-full">
              <CheckCircle className="h-4 w-4 mr-2" />
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            </Button>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle>–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="flex gap-2">
              <Button variant="secondary" className="flex-1">
                <Download className="h-4 w-4 mr-2" />
                –°–∫–∞—á–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
              </Button>
              <Button variant="secondary" className="flex-1">
                <Upload className="h-4 w-4 mr-2" />
                –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
              </Button>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle>–û—Ç—á–µ—Ç—ã</CardTitle>
          </CardHeader>
          <CardContent className="space-y-2">
            <Button variant="secondary" className="w-full justify-start">
              <FileText className="h-4 w-4 mr-2" />
              PDF –æ—Ç—á–µ—Ç –ø–æ –∑–∞—Ä–ø–ª–∞—Ç–µ
            </Button>
            <Button variant="secondary" className="w-full justify-start">
              <FileText className="h-4 w-4 mr-2" />
              –û—Ç—á–µ—Ç –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º
            </Button>
            <Button variant="secondary" className="w-full justify-start">
              <FileText className="h-4 w-4 mr-2" />
              –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç
            </Button>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø—Ä–æ–¥–∞–∂
const Analytics: React.FC = () => {
  const topSellers = [
    { id: 1, name: '–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤', sales: 456800, change: '+12%', rank: 1 },
    { id: 2, name: '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞', sales: 389200, change: '+8%', rank: 2 },
    { id: 3, name: '–î–º–∏—Ç—Ä–∏–π –°–∏–¥–æ—Ä–æ–≤', sales: 324500, change: '+15%', rank: 3 },
    { id: 4, name: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞', sales: 287300, change: '+3%', rank: 4 },
    { id: 5, name: '–ü–µ—Ç—Ä –ö–æ–∑–ª–æ–≤', sales: 256900, change: '-2%', rank: 5 }
  ];

  return (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
        <Card>
          <CardContent className="p-6">
            <div className="text-center">
              <TrendingUp className="h-8 w-8 text-success mx-auto mb-2" />
              <h3 className="font-semibold">–û–±—â–∏–µ –ø—Ä–æ–¥–∞–∂–∏</h3>
              <p className="text-2xl font-bold text-success">2,456,800 ‚ÇΩ</p>
              <p className="text-sm text-text-secondary">+15% –∫ –ø—Ä–æ—à–ª–æ–º—É –º–µ—Å—è—Ü—É</p>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-6">
            <div className="text-center">
              <BarChart3 className="h-8 w-8 text-primary mx-auto mb-2" />
              <h3 className="font-semibold">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</h3>
              <p className="text-2xl font-bold">2,840 ‚ÇΩ</p>
              <p className="text-sm text-text-secondary">+8% –∫ –ø—Ä–æ—à–ª–æ–º—É –º–µ—Å—è—Ü—É</p>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-6">
            <div className="text-center">
              <Users className="h-8 w-8 text-primary mx-auto mb-2" />
              <h3 className="font-semibold">–ö–ª–∏–µ–Ω—Ç–æ–≤ –æ–±—Å–ª—É–∂–µ–Ω–æ</h3>
              <p className="text-2xl font-bold">1,248</p>
              <p className="text-sm text-text-secondary">+12% –∫ –ø—Ä–æ—à–ª–æ–º—É –º–µ—Å—è—Ü—É</p>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-6">
            <div className="text-center">
              <Clock className="h-8 w-8 text-primary mx-auto mb-2" />
              <h3 className="font-semibold">–†–∞–±–æ—á–∏–µ —á–∞—Å—ã</h3>
              <p className="text-2xl font-bold">1,894</p>
              <p className="text-sm text-text-secondary">–í—Å–µ–≥–æ –∑–∞ –º–µ—Å—è—Ü</p>
            </div>
          </CardContent>
        </Card>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <Card>
          <CardHeader>
            <CardTitle>–†–µ–π—Ç–∏–Ω–≥ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {topSellers.map((seller) => (
                <div key={seller.id} className="flex items-center justify-between p-3 border border-border-light rounded-lg">
                  <div className="flex items-center gap-3">
                    <div className={`w-8 h-8 rounded-full flex items-center justify-center font-semibold text-sm ${
                      seller.rank <= 3 ? 'bg-primary text-primary-foreground' : 'bg-muted text-text-secondary'
                    }`}>
                      {seller.rank}
                    </div>
                    <div>
                      <p className="font-medium">{seller.name}</p>
                      <p className="text-sm text-text-secondary">
                        {seller.sales.toLocaleString()} ‚ÇΩ
                      </p>
                    </div>
                  </div>
                  <div className={`text-sm font-medium ${
                    seller.change.startsWith('+') ? 'text-success' : 'text-danger'
                  }`}>
                    {seller.change}
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle>–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="h-64 bg-muted rounded-lg flex items-center justify-center">
              <div className="text-center">
                <BarChart3 className="h-12 w-12 text-text-secondary mx-auto mb-2" />
                <p className="text-text-secondary">–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂ –ø–æ –¥–Ω—è–º</p>
                <p className="text-sm text-text-secondary">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π –¥–∏–∞–≥—Ä–∞–º–º</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Admin Panel
export const AdminPanel: React.FC = () => {
  return (
    <div className="min-h-screen bg-background">
      {/* Header */}
      <div className="border-b border-border-light bg-card">
        <div className="flex items-center justify-between p-4">
          <div className="flex items-center gap-4">
            <h1 className="text-xl font-semibold">–ü–æ—Ä—Ç–∞–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º</h1>
            <Badge variant="secondary">HR System</Badge>
          </div>
          
          <div className="flex items-center gap-4">
            <div className="flex-1 max-w-md">
              <Input placeholder="–ü–æ–∏—Å–∫..." className="w-full" />
            </div>
            <Button variant="ghost" size="sm">
              <Bell className="h-4 w-4" />
              <Badge className="ml-1 text-xs">3</Badge>
            </Button>
            <Button variant="ghost" size="sm">
              <Settings className="h-4 w-4" />
            </Button>
            <div className="w-8 h-8 bg-primary rounded-full flex items-center justify-center">
              <span className="text-xs text-primary-foreground font-medium">–ê–î</span>
            </div>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="p-6">
        <Tabs defaultValue="dashboard" className="space-y-6">
          <TabsList className="grid w-full grid-cols-6 lg:grid-cols-12">
            <TabsTrigger value="dashboard" className="col-span-2">–î–∞—à–±–æ—Ä–¥</TabsTrigger>
            <TabsTrigger value="employees" className="col-span-2">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</TabsTrigger>
            <TabsTrigger value="messaging" className="col-span-2">–†–∞—Å—Å—ã–ª–∫–∞</TabsTrigger>
            <TabsTrigger value="bonuses" className="col-span-2">–®—Ç—Ä–∞—Ñ—ã/–ü—Ä–µ–º–∏–∏</TabsTrigger>
            <TabsTrigger value="payments" className="col-span-2">–í—ã–ø–ª–∞—Ç—ã</TabsTrigger>
            <TabsTrigger value="control" className="col-span-2">–ö–æ–Ω—Ç—Ä–æ–ª—å</TabsTrigger>
            <TabsTrigger value="vacations" className="col-span-2">–û—Ç–ø—É—Å–∫–∞</TabsTrigger>
            <TabsTrigger value="property" className="col-span-2">–ò–º—É—â–µ—Å—Ç–≤–æ</TabsTrigger>
            <TabsTrigger value="analytics" className="col-span-2">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</TabsTrigger>
            <TabsTrigger value="birthdays" className="col-span-2">–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è</TabsTrigger>
            <TabsTrigger value="dictionary" className="col-span-2">–°–ª–æ–≤–∞—Ä—å</TabsTrigger>
            <TabsTrigger value="settings" className="col-span-2">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</TabsTrigger>
          </TabsList>
          
          <TabsContent value="dashboard">
            <Dashboard />
          </TabsContent>
          
          <TabsContent value="employees">
            <UsersManagement />
          </TabsContent>
          
          <TabsContent value="messaging">
            <MessagingSystem />
          </TabsContent>
          
          <TabsContent value="bonuses">
            <BonusesAndPenalties />
          </TabsContent>
          
          <TabsContent value="payments">
            <PaymentsManagement />
          </TabsContent>
          
          <TabsContent value="control">
            <PaymentControl />
          </TabsContent>
          
          <TabsContent value="vacations">
            <VacationsManagement />
          </TabsContent>
          
          <TabsContent value="property">
            <PropertyManagement />
          </TabsContent>
          
          <TabsContent value="analytics">
            <Analytics />
          </TabsContent>
          
          <TabsContent value="birthdays">
            <BirthdaysManagement />
          </TabsContent>
          
          <TabsContent value="dictionary">
            <DictionaryManagement />
          </TabsContent>
          
          <TabsContent value="settings">
            <SystemSettings />
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};